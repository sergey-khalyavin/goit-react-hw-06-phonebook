{"version":3,"sources":["components/App.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","components/Notification/Notification.js","redux/contacts/contactsReducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","contact","id","uuidv4","removeContacts","changeFilter","ContactForm","state","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","value","onSubmit","this","className","s","form","label","input","type","onChange","placeholder","btn","Component","mapDispatchToProps","contactsActions","connect","ownProps","item","contacts","items","find","dispatch","onRemove","styles","section__btn","onClick","filter","toLowerCase","includes","TransitionGroup","component","list","map","CSSTransition","timeout","classNames","unmountOnExit","onChangeFilter","App","box","in","appear","title","defaultModules","set","PNotifyMobile","createReducer","action","trim","error","text","animation","animateSpeed","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9e5c407.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__2UoYd\",\"title\":\"App_title__SuCli\",\"appear\":\"App_appear__rF12d\",\"appearActive\":\"App_appearActive__WOE8r\",\"enter\":\"App_enter__2LG_K\",\"enterActive\":\"App_enterActive__3KDlz\",\"exit\":\"App_exit__3YgkB\",\"exitActive\":\"App_exitActive__15ehb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListItem_enter__2DJgj\",\"enterActive\":\"ContactListItem_enterActive__2DHpi\",\"exit\":\"ContactListItem_exit__2Kjdm\",\"exitActive\":\"ContactListItem_exitActive__iFnit\",\"item\":\"ContactListItem_item__1h0bJ\",\"section__btn\":\"ContactListItem_section__btn__34OUU\",\"btn\":\"ContactListItem_btn__j3fXR\",\"list\":\"ContactListItem_list__3k_ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__hyIua\",\"enterActive\":\"ContactList_enterActive__3acqX\",\"exit\":\"ContactList_exit__mBc-2\",\"exitActive\":\"ContactList_exitActive__guV56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__34vW7\",\"label\":\"Filter_label__VTI5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Notification_appear__llfUQ\",\"appearActive\":\"Notification_appearActive__xdIxS\",\"enter\":\"Notification_enter__3-Rs5\",\"enterActive\":\"Notification_enterActive__gDqXE\",\"exit\":\"Notification_exit__23b18\",\"exitActive\":\"Notification_exitActive__22p_M\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContacts = createAction(\"contacts/addContact\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst removeContacts = createAction(\"contacts/removeContact\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContacts, removeContacts, changeFilter };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name:\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter name\"\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number:\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter number\"\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\n// const mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContacts,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactsActions from '../../../redux/contacts/contactsActions';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, id, number, onRemove }) => {\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <p>{name}:</p>\r\n      <p>{number}</p>\r\n      <section className={styles.section__btn}>\r\n        <button className={styles.btn} type=\"button\" onClick={onRemove}>\r\n          Delete\r\n        </button>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n  return {\r\n    ...item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsActions.removeContacts(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.list}>\r\n    {contacts.map(({ id }) => (\r\n      <CSSTransition key={id} timeout={1000} classNames={styles} unmountOnExit>\r\n        <ContactListItem key={id} id={id} />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const visibleContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <label className={s.label}>\r\n        Find contacts by name:\r\n        <input\r\n          className={s.filter}\r\n          placeholder=\"Enter name\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nimport styles from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={styles.box}>\r\n      <CSSTransition\r\n        in={true}\r\n        appear\r\n        timeout={500}\r\n        classNames={styles}\r\n        unmountOnExit\r\n      >\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <ContactForm />\r\n\r\n      <CSSTransition\r\n        in={true}\r\n        timeout={250}\r\n        classNames={styles.filter}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { CSSTransition } from 'react-transition-group';\r\nimport { error, defaultModules } from '@pnotify/core/dist/PNotify.js';\r\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\n\r\nimport styles from './Notification.module.css';\r\n\r\ndefaultModules.set(PNotifyMobile, {});\r\n\r\nexport default function errorMessage(name) {\r\n  <CSSTransition in={true} key={name} appear timeout={250} classNames={styles}>\r\n    {error({\r\n      text: `${name} is already in contacts!`,\r\n      animation: 'fade',\r\n      animateSpeed: '5000ms',\r\n    })}\r\n  </CSSTransition>;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nimport errorMessage from \"../../components/Notification/Notification\";\r\n\r\nconst INITAIL_DATA = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst addContacts = (state, action) => {\r\n  const names = state.map((item) => item.name.toLowerCase());\r\n  const isNotUniqueContact = names.includes(\r\n    action.payload.contact.name.toLowerCase().trim()\r\n  );\r\n\r\n  if (isNotUniqueContact) {\r\n    errorMessage(action.payload.contact.name);\r\n    return state;\r\n  } else {\r\n    return [...state, action.payload.contact];\r\n  }\r\n};\r\n\r\nconst removeContacts = (state, action) => {\r\n  return state.filter(({ id }) => id !== action.payload);\r\n};\r\n\r\nconst items = createReducer(INITAIL_DATA, {\r\n  [contactsActions.addContacts]: addContacts,\r\n  [contactsActions.removeContacts]: removeContacts,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form___YpsH\",\"label\":\"ContactForm_label__2fZWv\",\"input\":\"ContactForm_input__18gtH\",\"btn\":\"ContactForm_btn__27ast\"};"],"sourceRoot":""}